{"version":3,"sources":["components/common/Loading/style.module.scss","components/common/Header/index.js","assets/images/Loading/Loading.gif","components/common/Loading/index.js","redux/types/TodolistTypes.js","utils/constant/setting.js","utils/constant/urlApi.js","redux/actions/TodolistActions.js","pages/Todolist/bg.png","pages/Profile/index.js","utils/constant/router.js","pages/TodolistSaga/bg.png","routing.js","pages/Home/index.js","pages/AboutUs/index.js","pages/Contact/index.js","pages/Login/index.js","pages/Detail/index.js","pages/Todolist/index.js","pages/TodolistSaga/index.js","pages/PageNotFound/index.js","App.js","reportWebVitals.js","redux/reducers/TodolistReducer.js","redux/types/LoadingTypes.js","redux/reducers/LoadingReducer.js","services/ToDoListServies.js","redux/saga/TodolistSaga.js","redux/saga/rootSaga.js","redux/configStore.js","index.js"],"names":["module","exports","Header","useSelector","state","TodolistReducer","currentUser","className","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","activeClassName","placeholder","Loading","LoadingReducer","isLoading","styles","overlay","src","imageLoading","alt","TodolistTypes","TodolistSagaTypes","DOMAIN","TODOLIST_PATH","ADD_PATH","GET_ALL_PATH","DELETE_PATH","DONE_PATH","REJECT_PATH","getAllTaskApi","dispatch","a","axios","get","data","status","todoList","console","log","response","Profile","props","userLogin","JSON","parse","localStorage","getItem","alert","ROUTE_PATHS","anonymousRouters","href","exact","component","Contact","useDispatch","useState","username","password","setstate","handleChange","e","target","name","value","onSubmit","preventDefault","setItem","stringify","history","goBack","onChange","match","params","newTask","useEffect","getAllTask","handleDeleteTask","taskName","delete","deleteTaskApi","handleDoneTask","put","doneTaskApi","handleRejectTask","rejectTaskApi","gb","event","onClick","post","filter","task","map","index","App","route","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","DISPLAY_LOADING","HIDE_LOADING","action","toDoListServies","getTaskApi","addTaskApi","watchGetTaskApi","addTaskApiAction","watchAddTaskApi","deleteTaskApiAction","watchDeleteTaskApi","doneTaskApiAction","watchDoneTaskApi","rejectTaskApiAction","watchRejectTaskApi","root","call","takeLatest","all","rootSaga","middlewareSaga","createSagaMiddleware","rootReducer","combineReducers","store","createStore","applyMiddleware","reduxThunk","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.062a1ad0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"style_overlay__7yZS1\"};","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './style.scss'\r\n\r\nconst Header = () => {\r\n    const userLogin = useSelector(state => state.TodolistReducer.currentUser)\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            <div className=\"container\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\">Navbar</NavLink>\r\n                <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n                    <ul className=\"navbar-nav me-auto mt-2 mt-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink activeClassName=\"active_link\" className=\"nav-link\" to=\"/todolist\">To do list Redux-Thunk</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink activeClassName=\"active_link\" className=\"nav-link\" to=\"/todolist-saga\">To do list Redux-Saga</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <form className=\"d-flex my-2 my-lg-0\">\r\n                        <input className=\"form-control me-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n                        <button className=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </nav >\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/Loading.5e01ee79.gif\";","import React from 'react'\r\nimport styles from './style.module.scss'\r\nimport imageLoading from './../../../assets/images/Loading/Loading.gif'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function Loading() {\r\n    const { isLoading } = useSelector(state => state.LoadingReducer)\r\n    if (isLoading) {\r\n        return (\r\n            <div className={styles.overlay} >\r\n                <img src={imageLoading} alt=\"loading\" />\r\n            </div>\r\n        )\r\n    }else return ''\r\n\r\n}\r\n","export const TodolistTypes = {\r\n    GET_ALL_TASK : 'GET_ALL_TASK',\r\n    ADD_TASK : 'ADD_TASK',\r\n    DELETE_TASK : 'DELETE_TASK',\r\n    DONE_TASK : 'DONE_TASK',\r\n    REJECT_TASK : 'REJECT_TASK',\r\n    LOGIN: 'LOGIN',\r\n}\r\n\r\n// -------------SAGA----------------\r\n\r\nexport const TodolistSagaTypes = {\r\n    GET_TASKLIST_API: 'GET_TASKLIST_API',\r\n    ADD_TASK_API: 'ADD_TASK_API',\r\n    DELETE_TASK_API: 'DELETE_TASK_API',\r\n    DONE_TASK_API : 'DONE_TASK_API',\r\n    REJECT_TASK_API : 'REJECT_TASK'\r\n}   \r\n\r\n","export const DOMAIN = 'http://svcy.myclass.vn/api'","import { DOMAIN } from \"./setting\";\r\n\r\nexport const TODOLIST_PATH={\r\n    ADD_PATH:`${DOMAIN}/ToDoList/AddTask`,\r\n    GET_ALL_PATH:`${DOMAIN}/ToDoList/GetAllTask`,\r\n    DELETE_PATH:`${DOMAIN}/ToDoList/deleteTask?taskName=`,\r\n    DONE_PATH: `${DOMAIN}/ToDoList/doneTask?taskName=`,\r\n    REJECT_PATH:`${DOMAIN}/ToDoList/rejectTask?taskName=`\r\n}","import axios from \"axios\"\r\nimport { TODOLIST_PATH } from \"../../utils/constant/urlApi\"\r\nimport { TodolistTypes } from \"../types/TodolistTypes\"\r\n\r\nexport const getAllTaskApi = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const { data, status } = await axios.get(TODOLIST_PATH.GET_ALL_PATH)\r\n            if (status === 200) {\r\n                dispatch({\r\n                    type: TodolistTypes.GET_ALL_TASK,\r\n                    todoList: data\r\n                })\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(error.response.data)\r\n        }\r\n    }\r\n}\r\n\r\nexport const addTaskApi = (taskName) => {\r\n    return async dispatch => {\r\n        try {\r\n            const {status } = await axios.post(TODOLIST_PATH.ADD_PATH, { taskName })\r\n            if (status === 200)\r\n                dispatch(getAllTaskApi())\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTaskApi = (taskName) => {\r\n    return async dispatch => {\r\n        try {\r\n            const {status } = await axios.delete(TODOLIST_PATH.DELETE_PATH + taskName)\r\n            if (status === 200)\r\n                dispatch(getAllTaskApi())\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n        }\r\n    }\r\n}\r\n\r\nexport const doneTaskApi = (taskName) => {\r\n    return async dispatch => {\r\n        try {\r\n            const {status } = await axios.put(TODOLIST_PATH.DONE_PATH + taskName)\r\n            if (status === 200)\r\n                dispatch(getAllTaskApi())\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n        }\r\n    }\r\n}\r\n\r\nexport const rejectTaskApi = (taskName) => {\r\n    return async dispatch => {\r\n        try {\r\n            const {status } = await axios.put(TODOLIST_PATH.REJECT_PATH + taskName)\r\n            if (status === 200)\r\n                dispatch(getAllTaskApi())\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n        }\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/bg.dfa77826.png\";","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport default function Profile(props) {\r\n    const userLogin =  JSON.parse(localStorage.getItem('userLogin'))\r\n    if(!userLogin){\r\n        alert('Please login!!')\r\n        return <Redirect to='/login'/>}\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-1 text-center\">Profile</h1>\r\n            <p className=\"display-4 text-center\">{`Username :${userLogin}`}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const ROUTE_PATHS = {\r\n    HOME : '/',\r\n    CONTACT : '/contact',\r\n    ABOUT_US : '/about-us',\r\n    LOGIN : '/login',\r\n    DETAIL : '/detail/:id',\r\n    PROFILE:'/profile',\r\n    TODOLIST : '/todolist',\r\n    TODOLIST_SAGA : '/todolist-saga',\r\n    PAGE_NOT_FOUND : '*'\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bg.dfa77826.png\";","import AboutUs from \"./pages/AboutUs\";\r\nimport Contact from \"./pages/Contact\";\r\nimport Detail from \"./pages/Detail\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport PageNotFound from \"./pages/PageNotFound\";\r\nimport Todolist from \"./pages/Todolist\";\r\nimport Profile from \"./pages/Profile\";\r\nimport { ROUTE_PATHS } from \"./utils/constant/router\";\r\nimport TodolistSaga from \"./pages/TodolistSaga\";\r\n\r\nexport const anonymousRouters = [{\r\n    href: ROUTE_PATHS.HOME,\r\n    exact:true,\r\n    component:Home,\r\n},{\r\n    href: ROUTE_PATHS.ABOUT_US,\r\n    exact:true,\r\n    component:AboutUs,\r\n},{\r\n    href: ROUTE_PATHS.CONTACT,\r\n    exact:true,\r\n    component:Contact,\r\n},{\r\n    href: ROUTE_PATHS.LOGIN,\r\n    exact:true,\r\n    component:Login,\r\n},{\r\n    href: ROUTE_PATHS.DETAIL,\r\n    exact:true,\r\n    component:Detail,\r\n},{\r\n    href: ROUTE_PATHS.PROFILE,\r\n    exact:true,\r\n    component:Profile,\r\n},{\r\n    href: ROUTE_PATHS.PROFILE,\r\n    exact:true,\r\n    component:Profile,\r\n},{\r\n    href: ROUTE_PATHS.TODOLIST,\r\n    exact:true,\r\n    component:Todolist,\r\n},{\r\n    href: ROUTE_PATHS.TODOLIST_SAGA,\r\n    exact:true,\r\n    component:TodolistSaga,\r\n},{\r\n    href: ROUTE_PATHS.PAGE_NOT_FOUND,\r\n    exact:true,\r\n    component:PageNotFound,\r\n}\r\n]","import React from 'react'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"display-1 text-center\">Welcome to my app</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function AboutUs() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-1 text-center\">About Us</h1>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit blanditiis nulla ab temporibus soluta fugiat laudantium eum explicabo iusto doloremque. Tempore repudiandae amet laudantium officia dolorem voluptatem nam, voluptatibus natus?</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Contact() {\r\n    console.log('Contact :>> ', Contact);\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-1 text-center\">Contact</h1>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit blanditiis nulla ab temporibus soluta fugiat laudantium eum explicabo iusto doloremque. Tempore repudiandae amet laudantium officia dolorem voluptatem nam, voluptatibus natus?</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { TodolistTypes } from '../../redux/types/TodolistTypes'\r\n\r\nexport default function Login(props) {\r\n    const dispatch = useDispatch()\r\n    const [state, setstate] = useState({\r\n        username:'admin',\r\n        password:'admin',\r\n    })\r\n\r\n    const handleChange = (e)=>{\r\n        const {name, value} = e.target\r\n        setstate({...state, [name]:value})\r\n    }\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        if(state.username==='admin'&&state.password==='admin'){\r\n            localStorage.setItem('userLogin',JSON.stringify(state.username));\r\n            dispatch({type: TodolistTypes.LOGIN,currentUser:state.username})\r\n            props.history.goBack();\r\n        }\r\n        else alert('Login Fail')\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"display-1 text-center\">Login</h1>\r\n            <form onSubmit={handleLogin}>\r\n                <div className=\"mb-3\">\r\n                    <label  className=\"form-label\">Username</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"username\" value={state.username} onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" name=\"password\" value={state.password} onChange={handleChange}/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Detail(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"display-1 text-center\">Detail</h1>\r\n            <h3 className=\"text-center\">id: {props.match.params.id}</h3>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTaskApi, deleteTaskApi, doneTaskApi, getAllTaskApi, rejectTaskApi } from '../../redux/actions/TodolistActions';\r\nimport gb from './bg.png';\r\nimport './style.css';\r\n\r\n\r\n\r\nexport default function Todolist() {\r\n    const [state, setstate] = useState({ newTask: '' });\r\n    const dispatch = useDispatch();\r\n    const todoList = useSelector(state => state.TodolistReducer.todoList)\r\n\r\n    useEffect(() => {\r\n        getAllTask();\r\n    }, []);\r\n\r\n    const getAllTask = () => dispatch(getAllTaskApi())\r\n\r\n    const handleChange = (event) => {\r\n        setstate({ ...state, newTask: event.target.value })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (state.newTask === '') return\r\n        dispatch(addTaskApi(state.newTask));\r\n        setstate({ ...state, newTask: '' })\r\n    }\r\n\r\n    const handleDeleteTask = (taskName) => {\r\n        dispatch(deleteTaskApi(taskName));\r\n    }\r\n\r\n    const handleDoneTask = (taskName) => {\r\n        dispatch(doneTaskApi(taskName));\r\n    }\r\n\r\n    const handleRejectTask = (taskName) => {\r\n        dispatch(rejectTaskApi(taskName));\r\n    }\r\n\r\n\r\n    const renderUncompletedTask = () => {\r\n        return todoList?.filter((task) => !task.status).map((task, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <span>{task.taskName}</span>\r\n                    <div className=\"buttons\">\r\n                        <button className=\"remove\" onClick={() => handleDeleteTask(task.taskName)}>\r\n                            <i className=\"fa fa-trash-alt\" />\r\n                        </button>\r\n                        <button className=\"complete\" onClick={() => handleDoneTask(task.taskName)}>\r\n                            <i className=\"far fa-check-circle\" />\r\n                            <i className=\"fas fa-check-circle\" />\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    const renderCompletedTask = () => {\r\n        return todoList?.filter((task) => task.status).map((task, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <span>{task.taskName}</span>\r\n                    <div className=\"buttons\">\r\n                        <button className=\"remove\" onClick={() => handleDeleteTask(task.taskName)}>\r\n                            <i className=\"fa fa-trash-alt\" />\r\n                        </button>\r\n                        <button className=\"complete\" onClick={() => handleRejectTask(task.taskName)}>\r\n                            <i className=\"far fa-check-circle\" />\r\n                            <i className=\"fas fa-check-circle\" />\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"todoApp\">\r\n            <div className=\"card\">\r\n                <div className=\"card__header\">\r\n                    <img src={gb} alt=\"bg\" />\r\n                </div>\r\n                {/* <h2>hello!</h2> */}\r\n                <div className=\"card__body\">\r\n                    <div className=\"card__content\">\r\n                        <div className=\"card__title\">\r\n                            <h2>My Tasks</h2>\r\n                            <p>September 9,2020</p>\r\n                        </div>\r\n                        <div className=\"card__add\">\r\n                            <input id=\"newTask\" type=\"text\" placeholder=\"Enter an activity...\" value={state.newTask} onChange={handleChange} />\r\n                            <button id=\"addItem\" onClick={handleSubmit}>\r\n                                <i className=\"fa fa-plus\" />\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"card__todo\">\r\n                            {/* Uncompleted tasks */}\r\n                            <ul className=\"todo\" id=\"todo\">\r\n                                {renderUncompletedTask()}\r\n                            </ul>\r\n                            {/* Completed tasks */}\r\n                            <ul className=\"todo\" id=\"completed\">\r\n                                {renderCompletedTask()}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TodolistSagaTypes } from '../../redux/types/TodolistTypes';\r\n\r\nimport gb from './bg.png';\r\nimport './style.css';\r\n\r\n\r\n\r\nexport default function TodolistSaga() {\r\n    const [state, setstate] = useState({ newTask: '' });\r\n    const dispatch = useDispatch();\r\n    const todoList = useSelector(state => state.TodolistReducer.todoList)\r\n\r\n    useEffect(() => {\r\n        getAllTask()\r\n    }, []);\r\n\r\n    const getAllTask = () =>{\r\n        dispatch({type:TodolistSagaTypes.GET_TASKLIST_API});\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setstate({ ...state, newTask: event.target.value })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (state.newTask === '') return\r\n        dispatch({type:TodolistSagaTypes.ADD_TASK_API, taskName: state.newTask})\r\n        setstate({ ...state, newTask: '' })\r\n    }\r\n\r\n    const handleDeleteTask = (taskName) => {\r\n        dispatch({type:TodolistSagaTypes.DELETE_TASK_API, taskName})\r\n    }\r\n\r\n    const handleDoneTask = (taskName) => {\r\n        dispatch({type:TodolistSagaTypes.DONE_TASK_API, taskName})\r\n    }\r\n\r\n    const handleRejectTask = (taskName) => {\r\n        dispatch({type:TodolistSagaTypes.REJECT_TASK_API, taskName})\r\n    }\r\n\r\n\r\n    const renderUncompletedTask = () => {\r\n        return todoList?.filter((task) => !task.status).map((task, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <span>{task.taskName}</span>\r\n                    <div className=\"buttons\">\r\n                        <button className=\"remove\" onClick={() => handleDeleteTask(task.taskName)}>\r\n                            <i className=\"fa fa-trash-alt\" />\r\n                        </button>\r\n                        <button className=\"complete\" onClick={() => handleDoneTask(task.taskName)}>\r\n                            <i className=\"far fa-check-circle\" />\r\n                            <i className=\"fas fa-check-circle\" />\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    const renderCompletedTask = () => {\r\n        return todoList?.filter((task) => task.status).map((task, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <span>{task.taskName}</span>\r\n                    <div className=\"buttons\">\r\n                        <button className=\"remove\" onClick={() => handleDeleteTask(task.taskName)}>\r\n                            <i className=\"fa fa-trash-alt\" />\r\n                        </button>\r\n                        <button className=\"complete\" onClick={() => handleRejectTask(task.taskName)}>\r\n                            <i className=\"far fa-check-circle\" />\r\n                            <i className=\"fas fa-check-circle\" />\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"todoApp\">\r\n            <div className=\"card\">\r\n                <div className=\"card__header\">\r\n                    <img src={gb} alt=\"bg\" />\r\n                </div>\r\n                {/* <h2>hello!</h2> */}\r\n                <div className=\"card__body\">\r\n                    <div className=\"card__content\">\r\n                        <div className=\"card__title\">\r\n                            <h2>My Tasks</h2>\r\n                            <p>September 9,2020</p>\r\n                        </div>\r\n                        <div className=\"card__add\">\r\n                            <input id=\"newTask\" type=\"text\" placeholder=\"Enter an activity...\" value={state.newTask} onChange={handleChange} />\r\n                            <button id=\"addItem\" onClick={handleSubmit}>\r\n                                <i className=\"fa fa-plus\" />\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"card__todo\">\r\n                            {/* Uncompleted tasks */}\r\n                            <ul className=\"todo\" id=\"todo\">\r\n                                {renderUncompletedTask()}\r\n                            </ul>\r\n                            {/* Completed tasks */}\r\n                            <ul className=\"todo\" id=\"completed\">\r\n                                {renderCompletedTask()}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function PageNotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-1 text-center\">404</h1>\r\n            <p className=\"display-4 text-center\">Page not found</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Header from \"./components/common/Header\";\r\nimport Loading from \"./components/common/Loading\";\r\nimport { anonymousRouters } from \"./routing\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Header />\r\n        <Loading/>\r\n        <Switch>\r\n          {anonymousRouters.map((route,index) => {\r\n            return <Route key={index} path={route.href} component={route.component} exact />\r\n          })}\r\n        </Switch>\r\n      </Router >\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { TodolistTypes } from \"../types/TodolistTypes\"\r\n\r\nconst initialState = {\r\n    todoList: [],\r\n    currentUser: JSON.parse(localStorage.getItem('userLogin'))||null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TodolistTypes.GET_ALL_TASK:\r\n            state.todoList = [...action.todoList];\r\n            return { ...state }\r\n        case TodolistTypes.LOGIN:\r\n            state.currentUser = action.currentUser;\r\n            return { ...state }\r\n        default:\r\n            return state\r\n    }\r\n}","export const DISPLAY_LOADING = 'DISPLAY_LOADING';\r\nexport const HIDE_LOADING = 'HIDE_LOADING';\r\n","import { DISPLAY_LOADING, HIDE_LOADING } from \"../types/LoadingTypes\";\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n}\r\n\r\nconst LoadingReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case DISPLAY_LOADING:\r\n            state.isLoading = true;\r\n            return { ...state }\r\n        case HIDE_LOADING:\r\n            state.isLoading = false;\r\n            return { ...state }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default LoadingReducer","/* eslint-disable no-useless-constructor */\r\nimport axios from \"axios\";\r\nimport { TODOLIST_PATH } from \"../utils/constant/urlApi\";\r\n\r\nexport class ToDoListServies{\r\n    constructor(){\r\n\r\n    }\r\n\r\n    getTaskApi = () => {\r\n        return axios.get(TODOLIST_PATH.GET_ALL_PATH)\r\n    }\r\n    addTaskApi = (taskName) => {\r\n        return axios.post(TODOLIST_PATH.ADD_PATH, { taskName })\r\n    }\r\n    deleteTaskApi = (taskName) => {\r\n        return axios.delete(TODOLIST_PATH.DELETE_PATH + taskName)\r\n    }\r\n    doneTaskApi = (taskName) => {\r\n        return axios.put(TODOLIST_PATH.DONE_PATH + taskName)\r\n    }\r\n    rejectTaskApi = (taskName) => {\r\n        return axios.put(TODOLIST_PATH.REJECT_PATH + taskName)\r\n    }\r\n}\r\n\r\nexport const toDoListServies = new ToDoListServies();","import { all, call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { toDoListServies } from \"../../services/ToDoListServies\";\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../types/LoadingTypes\";\r\nimport { TodolistSagaTypes, TodolistTypes } from \"../types/TodolistTypes\";\r\n\r\nfunction* getTaskApi(action) {\r\n    yield put({ type: DISPLAY_LOADING })\r\n    try {\r\n        const { data, status } = yield call(toDoListServies.getTaskApi)\r\n        if (status === 200) {\r\n            yield put({\r\n                type: TodolistTypes.GET_ALL_TASK,\r\n                todoList: data\r\n            })\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n    }\r\n    yield put({ type: HIDE_LOADING })\r\n}\r\nfunction* watchGetTaskApi() {\r\n    yield takeLatest(TodolistSagaTypes.GET_TASKLIST_API, getTaskApi);\r\n}\r\n\r\n\r\nfunction* addTaskApiAction(action) {\r\n    const { taskName } = action\r\n    yield put({ type: DISPLAY_LOADING })\r\n    const { status } = yield call(() => toDoListServies.addTaskApi(taskName))\r\n    if (status === 200) {\r\n        yield put({\r\n            type: TodolistSagaTypes.GET_TASKLIST_API\r\n        })\r\n    }\r\n    yield put({ type: HIDE_LOADING })\r\n}\r\nfunction* watchAddTaskApi() {\r\n    yield takeLatest(TodolistSagaTypes.ADD_TASK_API, addTaskApiAction);\r\n}\r\n\r\nfunction* deleteTaskApiAction(action) {\r\n    const { taskName } = action\r\n    yield put({ type: DISPLAY_LOADING })\r\n    const { status } = yield call(() => toDoListServies.deleteTaskApi(taskName))\r\n    if (status === 200) {\r\n        yield put({\r\n            type: TodolistSagaTypes.GET_TASKLIST_API\r\n        })\r\n    }\r\n    yield put({ type: HIDE_LOADING })\r\n}\r\nfunction* watchDeleteTaskApi() {\r\n    yield takeLatest(TodolistSagaTypes.DELETE_TASK_API, deleteTaskApiAction);\r\n}\r\nfunction* doneTaskApiAction(action) {\r\n    const { taskName } = action\r\n    yield put({ type: DISPLAY_LOADING })\r\n    const { status } = yield call(() => toDoListServies.doneTaskApi(taskName))\r\n    if (status === 200) {\r\n        yield put({\r\n            type: TodolistSagaTypes.GET_TASKLIST_API\r\n        })\r\n    }\r\n    yield put({ type: HIDE_LOADING })\r\n}\r\nfunction* watchDoneTaskApi() {\r\n    yield takeLatest(TodolistSagaTypes.DONE_TASK_API, doneTaskApiAction);\r\n}\r\n\r\nfunction* rejectTaskApiAction(action) {\r\n    const { taskName } = action\r\n    yield put({ type: DISPLAY_LOADING })\r\n    const { status } = yield call(() => toDoListServies.rejectTaskApi(taskName))\r\n    if (status === 200) {\r\n        yield put({\r\n            type: TodolistSagaTypes.GET_TASKLIST_API\r\n        })\r\n    }\r\n    yield put({ type: HIDE_LOADING })\r\n}\r\nfunction* watchRejectTaskApi() {\r\n    yield takeLatest(TodolistSagaTypes.REJECT_TASK_API, rejectTaskApiAction);\r\n}\r\n\r\n\r\nexport default function* root() {\r\n    yield all([\r\n        watchGetTaskApi(),\r\n        watchAddTaskApi(),\r\n        watchDeleteTaskApi(),\r\n        watchDoneTaskApi(),\r\n        watchRejectTaskApi()\r\n    ]);\r\n}","import { all } from \"redux-saga/effects\";\r\nimport todoList from \"./TodolistSaga\";\r\n\r\nexport function* rootSaga() {\r\n    yield all([\r\n        todoList()\r\n    ]);\r\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport reduxThunk from 'redux-thunk';\r\nimport TodolistReducer from './reducers/TodolistReducer';\r\nimport LoadingReducer from './reducers/LoadingReducer';\r\nimport { rootSaga } from \"./saga/rootSaga\";\r\n\r\n\r\nconst middlewareSaga = createSagaMiddleware()\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    TodolistReducer,\r\n    LoadingReducer\r\n})\r\n\r\nconst store =  createStore(rootReducer,applyMiddleware(reduxThunk,middlewareSaga));\r\n\r\nmiddlewareSaga.run(rootSaga);\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//Setup redux\r\nimport {Provider} from 'react-redux'\r\nimport store from './redux/configStore';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}